//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace kursovaya2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UniversityEntities : DbContext
    {
        public UniversityEntities()
            : base("name=UniversityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Curriculum> Curriculum { get; set; }
        public virtual DbSet<Registration> Registration { get; set; }
        public virtual DbSet<Student> Student { get; set; }
        public virtual DbSet<StudentGroup> StudentGroup { get; set; }
        public virtual DbSet<Subject> Subject { get; set; }
        public virtual DbSet<TaskOnTheSubject> TaskOnTheSubject { get; set; }
    
        public virtual ObjectResult<Request1_Result> Request1(Nullable<int> groupNumber)
        {
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Request1_Result>("Request1", groupNumberParameter);
        }
    
        public virtual ObjectResult<Request2_Result> Request2(string subjectTitle, Nullable<int> countOfTasks)
        {
            var subjectTitleParameter = subjectTitle != null ?
                new ObjectParameter("SubjectTitle", subjectTitle) :
                new ObjectParameter("SubjectTitle", typeof(string));
    
            var countOfTasksParameter = countOfTasks.HasValue ?
                new ObjectParameter("CountOfTasks", countOfTasks) :
                new ObjectParameter("CountOfTasks", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Request2_Result>("Request2", subjectTitleParameter, countOfTasksParameter);
        }
    
        public virtual int addCurriculum(string subject_Title, string group_NumberOfGroup)
        {
            var subject_TitleParameter = subject_Title != null ?
                new ObjectParameter("Subject_Title", subject_Title) :
                new ObjectParameter("Subject_Title", typeof(string));
    
            var group_NumberOfGroupParameter = group_NumberOfGroup != null ?
                new ObjectParameter("Group_NumberOfGroup", group_NumberOfGroup) :
                new ObjectParameter("Group_NumberOfGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addCurriculum", subject_TitleParameter, group_NumberOfGroupParameter);
        }
    }
}
